<?php/** * Class VendingMachine */class VendingMachine{    /**     * @var array     */    private $insertedMoney;    /**     * @var Product     */    private $selectedProduct;    /**     * @param $money     */    public function insertMoney($money)    {        $this->insertedMoney[] = $money;    }    /**     * @return string     */    public function displayInsertedTotal()    {        return '[' . $this->getMoneyList() . ']-[' . $this->getInsertedMoneyValue() . ']';    }    /**     * @param $product     */    public function selectProduct($product)    {        $this->selectedProduct = $product;    }    /**     * @return string     */    public function dispenseProduct()    {        if (!isset($this->selectedProduct)) {            return 'Please select a product first';        }        return '[' . $this->getSelectedProduct() . ']-[Change:' . $this->getChange() . ']';    }    /**     * @return string     */    public function returnMoney()    {        return '[' . $this->getMoneyList() . ']-[' . $this->getInsertedMoneyValue() . ']';    }    /**     * @return string     */    private function getChange()    {        $change = $this->selectedProduct->getValue() - $this->getInsertedMoneyValue();        return '$' . $change;    }    /**     * @return mixed     */    private function getSelectedProduct()    {        return $this->selectedProduct->getName();    }    /**     * @return string     */    public function displaySelectedProduct()    {        $product = $this->selectedProduct;        return $product->getName() . ': $' . $product->getValue();    }    /**     * @return string     */    private function getMoneyList()    {        $returnString = '';        if (empty($this->insertedMoney)) {            return '[]';        }        foreach ($this->insertedMoney as $money) {            $returnString .= $money->getName() . ',';        }        $returnString = rtrim($returnString, ',');        return $returnString;    }    /**     * @return string     */    private function getInsertedMoneyValue()    {        $totalInserted = 0;        if (empty($this->insertedMoney)) {            return '$0.00';        }        foreach ($this->insertedMoney as $money) {            $totalInserted += $money->getValue();        }        return '$' . $totalInserted;    }}